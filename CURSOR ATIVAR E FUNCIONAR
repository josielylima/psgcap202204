CREATE PROCEDURE SP_INATIVAR_FUNCIONARIOS_ALEATORIAMENTE
@CONTADORFINAL INT
AS
BEGIN

DECLARE @TOTALREGISTROS INT
DECLARE @CHAVEINICIAL INT
DECLARE @CHAVESELECIONADA INT
DECLARE @QTDE INT

DECLARE @CONTADORINCIAL INT
--DECLARE @CONTADORFINAL INT
DECLARE @TABELACHAVE TABLE(CHAVE INT NOT NULL PRIMARY KEY)
DECLARE @VERIFICACHAVE INT

SET @CONTADORINCIAL = 0
--SET @CONTADORFINAL = 10
WHILE (@CONTADORINCIAL <= @CONTADORFINAL)
BEGIN
 SET @QTDE = 0
 SET @VERIFICACHAVE = 0
 WHILE(@QTDE = 0)
 BEGIN
	SET @TOTALREGISTROS = (SELECT COUNT(*) FROM Funcionario_Tempo)
	SET @CHAVEINICIAL = (SELECT MIN(ID_Funcionario_Tempo) FROM Funcionario_Tempo)
	SET @CHAVESELECIONADA = (SELECT FLOOR(RAND()*(@TOTALREGISTROS-@CHAVEINICIAL)+@CHAVEINICIAL))
	SET @QTDE = (SELECT COUNT(*)
	FROM Funcionario_Tempo 
	WHERE (ID_Funcionario_Tempo = @CHAVESELECIONADA) AND (Situacao= 1))

END
SET @VERIFICACHAVE = (SELECT COUNT (*) FROM @TABELACHAVE WHERE CHAVE = @CHAVESELECIONADA)
IF (@VERIFICACHAVE = 0)
BEGIN

 INSERT INTO @TABELACHAVE(CHAVE) VALUES (@CHAVESELECIONADA)
 SET @CONTADORINCIAL = @CONTADORINCIAL + 1

END
END

 DECLARE DB_CURSOR CURSOR FOR
   SELECT CHAVE FROM @TABELACHAVE

	DECLARE @CHAVE INT

	OPEN DB_CURSOR
	FETCH NEXT FROM DB_CURSOR INTO @CHAVE

	WHILE @@FETCH_STATUS = 0
	BEGIN
	UPDATE Funcionario_Tempo
	SET Situacao = 0
	WHERE ID_Funcionario_Tempo = @CHAVE

	FETCH NEXT FROM DB_CURSOR INTO @CHAVE

	END

	CLOSE DB_CURSOR
	DEALLOCATE DB_CURSOR

	END
 GO






 SELECT * FROM Funcionario_Tempo WHERE Situacao = 0

 SELECT COUNT (*) AS ATIVOS FROM Funcionario_Tempo WHERE Situacao = 1
 SELECT COUNT (*) AS INATIVOS FROM Funcionario_Tempo WHERE Situacao = 0

